@model PagedList.IPagedList<CatereringExpert.Models.Caterers>
@using PagedList.Mvc;


@{
    ViewBag.Title = "Caterers";
}

<h2>Your Most Respected Caterers</h2>

<p>

        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-default btn-lg btn-block" })

        @using (Html.BeginForm("Index", "Caterers", FormMethod.Get))
        {
            
<p >
       
            Genre: @Html.DropDownList("foodGenre", "All")
            Title: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Filter" />
        
</p>
    }
</p>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
         @*       <button type="button" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="" data-original-title="Tooltip on top">Top</button>*@

                @Html.ActionLink("Company Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter }, new { Class = "action add", title = "Click to Sort Company Names" })
             @*   @Html.DisplayNameFor(model => model.CompanyName)*@
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.City)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Postcode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </th>*@
            <th>
                @Html.ActionLink("Event Type", "Index", new { sortOrder = ViewBag.EventSortParm, currentFilter = ViewBag.CurrentFilter }, new { Class = "action add", title = "Click to Sort Event Types" })
               @* @Html.DisplayNameFor(model => model.EventType)*@
            </th>
            <th>
                @Html.ActionLink("Food Type", "Index", new { sortOrder = ViewBag.FoodSortParm, currentFilter = ViewBag.CurrentFilter }, new { Class = "action add", title = "Click to Sort Food Types" })
               @* @Html.DisplayNameFor(model => model.Foodtype)*@
            </th>
            <th>
                @Html.ActionLink("Avg Price", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter }, new { Class = "action add", title = "Click to Sort by Price" })
               @* @Html.DisplayNameFor(model => model.AvePrice)*@
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Website)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>*@
            <th></th>
        </tr>
    </thead>
        @foreach (var item in Model)
        {
            <tr onclick="location.href = '@(Url.Action("Details", "Caterers", new { id = item.ID }))'">
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyName)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Postcode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.EventType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Foodtype)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AvePrice)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Website)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>*@
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))